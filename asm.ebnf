@@eol_comments :: /;.*?$/
@@ignorecase :: True

start = {statement}+ $ ;
statement = meta | instruction | pseudo | label;

meta = orig | word | name ;
orig = '.orig' @:num ;
word = '.word' word:imm ;
name = '.name' @+:str '=' @+:num ;

instruction = alu | load | store | compare | jal;

label = !reserved label:str ':' ;

reserved = (alur_ins | alui_ins | cmpr_ins | cmpi_ins | branch_ins 
        | branchz_ins | load_ins | jal_ins | pseudo_ins )/(?!\w)/;

alu =  alui | alur;
alui = (instr:alui_ins fmt:fmt1) 
    | (instr:'mvhi' fmt:fmt2) ;
alur = instr:alur_ins fmt:fmt0 ;

load = instr:'lw' fmt:fmt3 ;
store = instr:'sw' fmt:fmt4 ;

compare = cmpi | cmpr | branchz | branch;
cmpi = instr:cmpi_ins fmt:fmt1 ;
cmpr =  instr:cmpr_ins fmt:fmt0 ;
branchz = instr:branchz_ins fmt:fmt6 ;
branch = instr:branch_ins fmt:fmt5 ;

jal = instr:'jal' fmt:fmt3;

pseudo = (instr:'br' fmt:fmt7)
    | (instr:'not' fmt:fmt8)
    | (instr:/b[lg]e/ fmt:fmt5)
    | (instr:/call|jmp/ fmt:fmt9)
    | (instr:'ret') ;

alur_ins = /add|sub|n?and|x?n?or/;
alui_ins = /(add|sub|n?and|x?n?or)i/;
cmpr_ins = /t|f|eq|ne|[lg]te?/ ;
cmpi_ins = /(t|f|eq|ne|[lg]te?)i/ ;
branch_ins = /b(t|f|eq|ne|[lg]te?)/ ;
branchz_ins = /b(eq|ne|[lg]te?)z/ ;
load_ins = /[ls]w/ ; 
jal_ins = /jal/ ;
pseudo_ins = /br|b[lg]e|call|jmp|ret/ ;

fmt0 = rd:reg ',' rs1:reg ',' rs2:reg ;
fmt1 = rd:reg ',' rs1:reg ',' imm:imm ;
fmt2 = rd:reg ',' imm:imm ;
fmt3 = rd:reg ',' imm:imm '(' rs1:reg ')' ;
fmt4 = rs2:reg ',' imm:imm '(' rs1:reg ')' ;
fmt5 = rs1:reg ',' rs2:reg ',' imm:imm ;
fmt6 = rs1:reg ',' imm:imm ;
fmt7 = imm:imm ;
fmt8 = rd:reg ',' rs:reg ;
fmt9 = imm:imm '(' rs1:reg ')' ;

reg = /r(1[0-5]|[0-9])|a[0-3]|t[01]|s[0-2]|[gfs]p|r[va]/ ;

imm = n:num | s:str ;
num = hex | dec ;
hex = /0x[0-9a-fA-F]{1,8}/;
dec = /-?[0-9]+/ ;
str = /[a-zA-Z_][a-zA-Z0-9_]*/ ;
